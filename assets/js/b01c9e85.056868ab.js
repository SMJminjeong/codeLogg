"use strict";(self.webpackChunkcode_logg=self.webpackChunkcode_logg||[]).push([[7753],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>y});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=o.createContext({}),c=function(e){var r=o.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return o.createElement(p.Provider,{value:r},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},d=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),d=n,y=s["".concat(p,".").concat(d)]||s[d]||g[d]||a;return t?o.createElement(y,i(i({ref:r},u),{},{components:t})):o.createElement(y,i({ref:r},u))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[s]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1569:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=t(7462),n=(t(7294),t(3905));const a={slug:"TroubleShooting/JpaError",title:"JpaError",author:"MinJeong",author_title:"Software Developer",author_url:"ttps://github.com/SMJminjeong",author_image_url:"https://i.ibb.co/hX6xc0V/MJMW0830.jpg",tags:["software"]},i=void 0,l={unversionedId:"Study/TroubleShooting/JpaError",id:"Study/TroubleShooting/JpaError",isDocsHomePage:!1,title:"JpaError",description:"`shell",source:"@site/docs/Study/TroubleShooting/JpaError.md",sourceDirName:"Study/TroubleShooting",slug:"/Study/TroubleShooting/TroubleShooting/JpaError",permalink:"/codeLogg/Study/TroubleShooting/TroubleShooting/JpaError",tags:[{label:"software",permalink:"/codeLogg/tags/software"}],version:"current",frontMatter:{slug:"TroubleShooting/JpaError",title:"JpaError",author:"MinJeong",author_title:"Software Developer",author_url:"ttps://github.com/SMJminjeong",author_image_url:"https://i.ibb.co/hX6xc0V/MJMW0830.jpg",tags:["software"]},sidebar:"tutorialSidebar",previous:{title:"ElasticSearch \uc5f0\uacb0 \uc548\ub428",permalink:"/codeLogg/Study/TroubleShooting/TroubleShooting/ElasticSearch\uc5f0\uacb0\uc548\ub428"},next:{title:"No Mapping For Post",permalink:"/codeLogg/Study/TroubleShooting/TroubleShooting/NoMappingForPost"}},p=[],c={toc:p},u="wrapper";function s(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,o.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"Error creating bean with name 'blogRepository' defined in spectra.attic.talk.practice.blog.store.jpa.repository.BlogRepository defined in @EnableJpaRepositories declared on JpaConfig: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void spectra.attic.talk.practice.blog.store.jpa.repository.BlogRepository.removeAllByUserId(java.lang.String); Reason: Failed to create query for method public abstract void spectra.attic.talk.practice.blog.store.jpa.repository.BlogRepository.removeAllByUserId(java.lang.String)! No property 'userId' found for type 'BlogJpo'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract void spectra.attic.talk.practice.blog.store.jpa.repository.BlogRepository.removeAllByUserId(java.lang.String)! No property 'userId' found for type 'BlogJpo'\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"method \uc774\ub984\uc73c\ub85c \ucffc\ub9ac\uac00 \uc0dd\uc131\ub418\ub294\ub370 userId \ub294 \uc5c6\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc624\ub958 \ubc1c\uc0dd.")))}s.isMDXComponent=!0}}]);